
name: lethean-server

on:
  push:
    branches:
      - 'main'
      - 'v*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'main'
      - 'v*'
    paths-ignore:
      - '**.md'

jobs:

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.20.1
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm install
      - name: Testing
        run: npm run test
      - run: npm run server:build:windows
      - uses: papeloto/action-zip@v1
        with:
          files: lthn.exe start.cmd
          dest: windows.zip
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: windows.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            windows.zip
  macos-arm:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Select Xcode 12.0.0"
        uses: devbotsxyz/xcode-select@v1
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.20.1
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm install
      - name: Testing
        run: npm run test
      - run: npm run server:build:macos-arm
      - run: chmod +x lthn
      - name: Import Code-Signing Certificates for macOS
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MAC_DEVELOPER_CERT }}
          p12-password: ${{ secrets.MAC_DEVELOPER_PASS }}
      - run: codesign --no-strict --verify -f -s 'A7CD2243011C55DF683237BDA4989BFF0D081502' lthn
      - run: tar -cvf macos-arm.tar lthn start.sh
      - uses: actions/upload-artifact@v3
        with:
          name: macos-arm
          path: macos-arm.tar
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            macos-arm.tar
  macos-intel:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Select Xcode 12.0.0"
        uses: devbotsxyz/xcode-select@v1
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.20.1
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm install
      - name: Testing
        run: npm run test
      - run: npm run server:build:macos-intel
      - run: chmod +x lthn
      - name: Import Code-Signing Certificates for macOS
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          # The certificates in a PKCS12 file encoded as a base64 string
          p12-file-base64: ${{ secrets.MAC_DEVELOPER_CERT }}
          # The password used to import the PKCS12 file.
          p12-password: ${{ secrets.MAC_DEVELOPER_PASS }}
      - run: codesign --no-strict --verify -f -s 'A7CD2243011C55DF683237BDA4989BFF0D081502' lthn
      - run: tar -cvf macos-intel.tar lthn start.sh
      - uses: actions/upload-artifact@v3
        with:
          name: macos-intel
          path: macos-intel.tar
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            macos-intel.tar
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.20.1
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm install
      - run: sudo apt-get update && sudo apt-get -y install libwebkit2gtk-4.0-37
      - name: Testing
        run: npm run test
      - name: Generate coverage report
        run: deno coverage --lcov cov > cov.lcov
      - run: npm run server:build:linux
      - run: chmod +x lthn && tar -cvf linux.tar lthn start.sh
      - name: Upload coverage report
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: cov.lcov
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: linux.tar
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            linux.tar
  launchers:
    name: "Trigger: letheanVPN/launchers"
    runs-on: ubuntu-latest
    needs:
      - windows
      - linux
      - macos-arm
      - macos-intel
    steps:
      - name: Repository Dispatch
        if: startsWith(github.ref, 'refs/tags/')
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: build
          repository: letheanVPN/launchers
